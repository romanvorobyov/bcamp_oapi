openapi: 3.0.2
info:
  title: RVorobev bootcamp openapi task
  version: 1.0.0
  description: rvorobev.bootcamp.openapi
paths:
  /clients:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/client'
          description: response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      operationId: findClients
      description: 'Returns all not disabled clients (OR all clients with recent orders... TODO - secure it!)'
    put:
      requestBody:
        description: item to update it's info
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/client'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client'
          description: just-updated item
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      operationId: updateClient
      description: 'Updates existing item (price, quantity or description)'
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newClient'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client'
          description: just-created client
      operationId: createClient
      description: Creates a new client (TODO check for duplicates)
  '/client/delete/{login}':
    delete:
      parameters:
        - name: login
          description: ID of client to delete (disable)
          schema:
            format: int64
            type: integer
          in: path
          required: true
      responses:
        '204':
          description: client deleted (or disabled)
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      operationId: deleteClient
      description: 'deletes a client (TODO check rights, check if it is safe, or just set disabled)'
  '/clients/{login}/orders':
    get:
      description: 'show orders with desired status (TODO check authenticated, check rights)'
      operationId: findOrdersForClient
      parameters:
        - name: login
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: query
          description: order status (TODO use $ref _ "#/components/schemas/orderStatus")
          required: false
          schema:
            type: string
      responses:
        '200':
          description: list of client's orders for desired status
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/clientOrdersHistory'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: clients.yaml#/components/schemas/Error
  /client/{login}:
    get:
      parameters:
        - name: login
          in: path
          description: "client's login to search with"

      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client'
          description: existing client
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      operationId: findClientByLogin
      description: Return client by login
  /orders:
    get:
      description: 'show own orders with desired status (TODO check authenticated & rights), default AllButCancelled'
      operationId: findOwnOrders
      parameters:
        - name: status
          in: query
          description: order status
          required: true
          $ref: '#/components/schemas/orderStatus'
      responses:
        '200':
          description: list of own orders with desired status
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/clientOrdersHistory'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: clients.yaml#/components/schemas/Error
    post:
      description: Creates a new order
      operationId: createClientsOrder
      requestBody:
        description: item to add to the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newClientsOrder'
      responses:
        '200':
          description: just-created item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/clientsOrder'
    put:
      description: Updates existing order (TODO check if order is able to be corrected)
      operationId: updateClientsOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clientsOrder'
      responses:
        '200':
          description: just-updated order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/clientsOrder'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: clients.yaml#/components/schemas/Error
  '/orders/{id}':
    get:
      operationId: 'find logged user''s own order by id (TODO check rights, check authenticated)'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: order by id (TODO check rights)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/clientsOrder'
        '403':
          description: no rights
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: clients.yaml#/components/schemas/Error
    delete:
      description: discard order (TODO check rights)
      operationId: discardOrder
      parameters:
        - name: id
          in: path
          description: ID of user's order to discard
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: order discarded
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: clients.yaml#/components/schemas/Error
  /items:
    get:
      description: Returns all items in stock
      operationId: findItems
      parameters:
        - name: tags
          in: query
          description: tags to filter by
          required: false
          style: form
          schema:
            type: array
            items:
              type: string
        - name: priceLowerThan
          in: query
          description: 'selects items with price only below or equal to this (TODO -- priceHigherThan, yearOfProduction)'
          required: false
          schema:
            type: number
            format: float
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/item'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: clients.yaml#/components/schemas/Error
    post:
      description: Creates a new item in the store (TODO Check for duplicates)
      operationId: addItem
      requestBody:
        description: item to add to the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newItem'
      responses:
        '200':
          description: just-created item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/item'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: clients.yaml#/components/schemas/Error
  '/item/{id}':
    get:
      description: Returns item by id (TODO check if it exists)
      operationId: findItemById
      parameters:
        - name: id
          in: path
          description: ID of item to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: item description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/item'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: clients.yaml#/components/schemas/Error
    delete:
      description: deletes by Id
      operationId: deleteItem
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: item deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: clients.yaml#/components/schemas/Error
components:
  schemas:
    item:
      allOf:
        - $ref: '#/components/schemas/newItem'
        - type: object
          required:
            - id
          properties:
            id:
              type: integer
              format: int64
    newItem:
      description: item in stock with actual price and quantity
      type: object
      required:
        - name
        - qty
        - price
        - date
      properties:
        name:
          type: string
        description:
          type: string
        tag:
          type: string
        qty:
          description: quantity of items in stock
          type: integer
          format: int32
        price:
          type: number
          format: float
        dateAdded:
          type: string
          format: date
    clientOrders:
      type: object
      required:
        - client
        - status
      properties:
        client:
          $ref: clients.yaml#/components/schemas/client
        orderList:
          $ref: '#/components/schemas/orderList'
        status:
          $ref: '#/components/schemas/orderStatus'
    clientOrdersHistory:
      type: array
      items:
        $ref: '#/components/schemas/clientsOrder'
    clientsOrder:
      allOf:
        - $ref: '#/components/schemas/newClientsOrder'
        - type: object
          required:
            - id
          properties:
            id:
              type: integer
              format: int64
    newClientsOrder:
      type: object
      required:
        - orderDate
        - client
        - orderList
        - orderSum
      properties:
        id:
          type: integer
          format: int64
        orderDate:
          type: string
          format: date-time
        client:
          $ref: clients.yaml#/components/schemas/client
        orderList:
          $ref: '#/components/schemas/orderList'
        orderSum:
          type: number
          format: float
    orderList:
      type: array
      items:
        $ref: '#/components/schemas/orderItem'
    orderItem:
      allOf:
        - $ref: '#/components/schemas/newOrderItem'
        - type: object
          required:
            - id
          properties:
            id:
              type: integer
              format: int64
    newOrderItem:
      type: object
      required:
        - priceBought
        - qtyBought
      properties:
        priceBought:
          type: number
          format: float
        qtyBought:
          type: integer
          format: int32
    orderStatus:
      enum:
        - All
        - ActiveOnly
        - CompletedOnly
        - CancelledOnly
        - AllButCancelled
      default: AllButCancelled
    client:
      allOf:
        - $ref: '#/components/schemas/newClient'
        - required:
            - id
          type: object
          properties:
            id:
              format: int64
              type: integer
    newClient:
      required:
        - name
        - login
        - email
        - dayOfBirth
      type: object
      properties:
        name:
          type: string
        login:
          type: string
        email:
          format: email
          type: string
        dayOfBirth:
          format: date
          type: string
        disabled:
          default: false
          type: boolean
    Error:
      required:
        - code
        - message
      type: object
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
