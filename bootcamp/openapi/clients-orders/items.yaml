openapi: "3.0.0"
info:
  version: 1.0.0
  title: Swagger itemstore
  description: A sample API as an example to demonstrate features in the OpenAPI 3.0 specification
  termsOfService: http://swagger.io/terms/
servers:
  - url: http://store.bootcamp.sbt.com/api
paths:
  /items:
    get:
      description: Returns all items in stock
      operationId: findItems
      parameters:
        - name: tags
          in: query
          description: tags to filter by
          required: false
          style: form
          schema:
            type: array
            items:
              type: string
        - name: priceLowerThan
          in: query
          description: selects items with price only below or equal to this (TODO -- priceHigherThan, yearOfProduction)
          required: false
          schema:
            type: number
            format: float
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/item"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "clients.yaml#/components/schemas/Error"

    post:
      description: Creates a new item in the store (TODO Check for duplicates)
      operationId: addItem
      requestBody:
        description: item to add to the store
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/newItem"
      responses:
        "200":
          description: just-created item
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/item"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "clients.yaml#/components/schemas/Error"
  /item/{id}:
    get:
      description: Returns item by id (TODO check if it exists)
      operationId: findItemById
      parameters:
        - name: id
          in: path
          description: ID of item to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: item description
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/item"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "clients.yaml#/components/schemas/Error"
    delete:
      description: deletes by Id
      operationId: deleteItem
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: item deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "clients.yaml#/components/schemas/Error"

components:
  schemas:
    item:
      allOf:
        - $ref: "#/components/schemas/newItem"
        - type: object
          required:
          - id
          properties:
            id:
              type: integer
              format: int64

    newItem:
      description: item in stock with actual price and quantity
      type: object
      required:
        - name  
        - qty
        - price
        - date
      properties:
        name:
          type: string
        description:
          type: string
        tag:
          type: string
        qty:
          description: quantity of items in stock
          type: integer
          format: int32
        price:
          type: number
          format: float
        dateAdded:
          type: string
          format: date